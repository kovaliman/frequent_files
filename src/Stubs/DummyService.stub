<?php

namespace {{ namespace }};

use {{ interfaceImport }};
use {{ createDTOImport }};
use {{ updateDTOImport }};
use App\{{ directoryName }}\General\Services\Search\SearchService;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

class {{ class }} extends SearchService
{
    private {{ interfaceClassName }} ${{ interfaceVar }};

    public function __construct({{ interfaceClassName }} ${{ interfaceVar }})
    {
        $this->{{ interfaceVar }} = ${{ interfaceVar }};
    }

    public function create({{ createDataClass }} $createData): Model
    {
        return $this->{{ interfaceVar }}->create([
            //todo
        ]);
    }

    public function update({{ updateDataClass }} $updateData): Model
    {
        return $this->{{ interfaceVar }}->update($updateData->{{ modelVar }}, [
            //todo
        ]);
    }

    protected function getQuery(array $data, array $with = []): Builder
    {
        /** @var Builder $query */
        $query = $this->{{ interfaceVar }}->getModel()::query();

        $query->with($with);

        return $query;
    }

    public function getById(int $id, array $with = []): ?Model
    {
        return $this->getFirst(['id' => $id], $with);
    }
}
